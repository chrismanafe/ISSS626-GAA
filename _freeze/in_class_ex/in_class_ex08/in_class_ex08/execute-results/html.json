{
  "hash": "bf8d581d7af7876a361d6b5785d3068f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 8: Geographically Weighted Predictive Models\"\nauthor: \"Christover Manafe\"\ndate: \"2024-10-21\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\nformat: \n  html:\n    code-fold: false\n    code-summary: \"code chunk\"\n    number-sections: true\n    number-depth: 4\n---\n\n\n# Installing and Loading the Package\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, GWmodel, SpatialML, \n               tmap, rsample, Metrics, tidyverse,kableExtra)\n```\n:::\n\n\n# Preparing Data\n\n## Data import\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata <- read_rds(\"data/mdata.rds\")\nglimpse(mdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 15,901\nColumns: 18\n$ resale_price             <dbl> 330000, 360000, 370000, 375000, 380000, 38000…\n$ floor_area_sqm           <dbl> 92, 91, 92, 99, 92, 92, 92, 92, 93, 91, 91, 9…\n$ storey_order             <int> 1, 3, 1, 2, 2, 4, 3, 2, 4, 3, 3, 3, 4, 3, 2, …\n$ remaining_lease_mths     <dbl> 684, 738, 733, 700, 715, 732, 706, 745, 731, …\n$ PROX_CBD                 <dbl> 8.824749, 9.841309, 9.560780, 9.609731, 8.351…\n$ PROX_ELDERLYCARE         <dbl> 0.2514065, 0.6318448, 1.0824168, 0.3473195, 0…\n$ PROX_HAWKER              <dbl> 0.44182653, 0.26972560, 0.25829513, 0.4364751…\n$ PROX_MRT                 <dbl> 0.6885144, 1.0969096, 0.8862859, 1.4093169, 0…\n$ PROX_PARK                <dbl> 0.7450859, 0.4294870, 0.7800777, 0.1776163, 0…\n$ PROX_GOOD_PRISCH         <dbl> 1.2703931, 0.4045792, 2.0942375, 0.1375070, 1…\n$ PROX_MALL                <dbl> 0.5534331, 1.0677012, 0.9751113, 1.1752392, 1…\n$ PROX_CHAS                <dbl> 1.364596e-01, 2.569863e-01, 1.906189e-01, 2.9…\n$ PROX_SUPERMARKET         <dbl> 0.2708222, 0.3101889, 0.3187560, 0.4586748, 0…\n$ WITHIN_350M_KINDERGARTEN <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, …\n$ WITHIN_350M_CHILDCARE    <int> 6, 5, 2, 3, 3, 2, 3, 4, 3, 2, 4, 4, 4, 5, 2, …\n$ WITHIN_350M_BUS          <int> 8, 8, 8, 7, 6, 9, 6, 6, 5, 4, 10, 5, 6, 9, 8,…\n$ WITHIN_1KM_PRISCH        <int> 2, 2, 1, 2, 2, 1, 3, 2, 2, 2, 2, 2, 3, 2, 2, …\n$ geometry                 <POINT [m]> POINT (29179.92 38822.08), POINT (28423…\n```\n\n\n:::\n:::\n\n\n## Data sampling\n\nThe entire data are split in to training and test data sets with 65% and 35% respectively by using `initial_split()` of **rsample** package. rsample is one of the package of tidymodels\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nresale_split <- initial_split(mdata,\n                              prop = 6.5/10)\ntrain_data <- training (resale_split)\ntest_data <- testing(resale_split)\n```\n:::\n\n\n### Correlation Matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata_nogeo <- mdata %>%\n  st_drop_geometry()\nggstatsplot::ggcorrmat(mdata_nogeo[, 2:17])\n```\n\n::: {.cell-output-display}\n![](in_class_ex08_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Building non-spatial multiple linear regression\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_mlr <- lm(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                data=train_data)\nolsrr::ols_regress(price_mlr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                              Model Summary                                \n--------------------------------------------------------------------------\nR                           0.859       RMSE                    61604.120 \nR-Squared                   0.737       MSE                3800583670.022 \nAdj. R-Squared              0.737       Coef. Var                  14.193 \nPred R-Squared              0.737       AIC                    257320.224 \nMAE                     47485.556       SBC                    257436.117 \n--------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares           DF       Mean Square       F          Sig. \n--------------------------------------------------------------------------------\nRegression    1.100899e+14           14      7.863561e+12     2069.04    0.0000 \nResidual      3.922202e+13        10320    3800583670.022                       \nTotal         1.493119e+14        10334                                         \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                 \n------------------------------------------------------------------------------------------------------------------\n                   model          Beta    Std. Error    Std. Beta       t        Sig          lower         upper \n------------------------------------------------------------------------------------------------------------------\n             (Intercept)    107601.073     10601.261                  10.150    0.000     86820.546    128381.599 \n          floor_area_sqm      2780.698        90.579        0.164     30.699    0.000      2603.146      2958.251 \n            storey_order     14299.298       339.115        0.234     42.167    0.000     13634.567     14964.029 \n    remaining_lease_mths       344.490         4.592        0.442     75.027    0.000       335.489       353.490 \n                PROX_CBD    -16930.196       201.254       -0.586    -84.124    0.000    -17324.693    -16535.700 \n        PROX_ELDERLYCARE    -14441.025       994.867       -0.079    -14.516    0.000    -16391.157    -12490.893 \n             PROX_HAWKER    -19265.648      1273.597       -0.083    -15.127    0.000    -21762.144    -16769.151 \n                PROX_MRT    -32564.272      1744.232       -0.105    -18.670    0.000    -35983.305    -29145.240 \n               PROX_PARK     -5712.625      1483.885       -0.021     -3.850    0.000     -8621.328     -2803.922 \n               PROX_MALL    -14717.388      2007.818       -0.044     -7.330    0.000    -18653.100    -10781.675 \n        PROX_SUPERMARKET    -26881.938      4189.624       -0.035     -6.416    0.000    -35094.414    -18669.462 \nWITHIN_350M_KINDERGARTEN      8520.472       632.812        0.072     13.464    0.000      7280.038      9760.905 \n   WITHIN_350M_CHILDCARE     -4510.650       354.015       -0.074    -12.741    0.000     -5204.589     -3816.711 \n         WITHIN_350M_BUS       813.493       222.574        0.020      3.655    0.000       377.205      1249.781 \n       WITHIN_1KM_PRISCH     -8010.834       491.512       -0.102    -16.298    0.000     -8974.293     -7047.376 \n------------------------------------------------------------------------------------------------------------------\n```\n\n\n:::\n:::\n\n\n## Multicollinearity check with VIF\n\nWe will use *performance* of easystats package to visualize easily.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvif <- performance::check_collinearity(price_mlr)\nkable(vif,\n      caption =\"Variance Inflation Factor(VIF) Results\") %>%\n  kable_styling(font_size = 10)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"font-size: 10px; margin-left: auto; margin-right: auto;\">\n<caption style=\"font-size: initial !important;\">Variance Inflation Factor(VIF) Results</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Term </th>\n   <th style=\"text-align:right;\"> VIF </th>\n   <th style=\"text-align:right;\"> VIF_CI_low </th>\n   <th style=\"text-align:right;\"> VIF_CI_high </th>\n   <th style=\"text-align:right;\"> SE_factor </th>\n   <th style=\"text-align:right;\"> Tolerance </th>\n   <th style=\"text-align:right;\"> Tolerance_CI_low </th>\n   <th style=\"text-align:right;\"> Tolerance_CI_high </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> floor_area_sqm </td>\n   <td style=\"text-align:right;\"> 1.126308 </td>\n   <td style=\"text-align:right;\"> 1.104360 </td>\n   <td style=\"text-align:right;\"> 1.152871 </td>\n   <td style=\"text-align:right;\"> 1.061276 </td>\n   <td style=\"text-align:right;\"> 0.8878567 </td>\n   <td style=\"text-align:right;\"> 0.8673997 </td>\n   <td style=\"text-align:right;\"> 0.9055016 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> storey_order </td>\n   <td style=\"text-align:right;\"> 1.206586 </td>\n   <td style=\"text-align:right;\"> 1.181102 </td>\n   <td style=\"text-align:right;\"> 1.235657 </td>\n   <td style=\"text-align:right;\"> 1.098447 </td>\n   <td style=\"text-align:right;\"> 0.8287846 </td>\n   <td style=\"text-align:right;\"> 0.8092862 </td>\n   <td style=\"text-align:right;\"> 0.8466672 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> remaining_lease_mths </td>\n   <td style=\"text-align:right;\"> 1.363528 </td>\n   <td style=\"text-align:right;\"> 1.331762 </td>\n   <td style=\"text-align:right;\"> 1.398335 </td>\n   <td style=\"text-align:right;\"> 1.167702 </td>\n   <td style=\"text-align:right;\"> 0.7333919 </td>\n   <td style=\"text-align:right;\"> 0.7151363 </td>\n   <td style=\"text-align:right;\"> 0.7508850 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_CBD </td>\n   <td style=\"text-align:right;\"> 1.905054 </td>\n   <td style=\"text-align:right;\"> 1.852553 </td>\n   <td style=\"text-align:right;\"> 1.960788 </td>\n   <td style=\"text-align:right;\"> 1.380237 </td>\n   <td style=\"text-align:right;\"> 0.5249196 </td>\n   <td style=\"text-align:right;\"> 0.5099991 </td>\n   <td style=\"text-align:right;\"> 0.5397957 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_ELDERLYCARE </td>\n   <td style=\"text-align:right;\"> 1.178400 </td>\n   <td style=\"text-align:right;\"> 1.154108 </td>\n   <td style=\"text-align:right;\"> 1.206522 </td>\n   <td style=\"text-align:right;\"> 1.085541 </td>\n   <td style=\"text-align:right;\"> 0.8486080 </td>\n   <td style=\"text-align:right;\"> 0.8288284 </td>\n   <td style=\"text-align:right;\"> 0.8664703 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_HAWKER </td>\n   <td style=\"text-align:right;\"> 1.187828 </td>\n   <td style=\"text-align:right;\"> 1.163132 </td>\n   <td style=\"text-align:right;\"> 1.216262 </td>\n   <td style=\"text-align:right;\"> 1.089875 </td>\n   <td style=\"text-align:right;\"> 0.8418729 </td>\n   <td style=\"text-align:right;\"> 0.8221915 </td>\n   <td style=\"text-align:right;\"> 0.8597474 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_MRT </td>\n   <td style=\"text-align:right;\"> 1.240457 </td>\n   <td style=\"text-align:right;\"> 1.213579 </td>\n   <td style=\"text-align:right;\"> 1.270718 </td>\n   <td style=\"text-align:right;\"> 1.113758 </td>\n   <td style=\"text-align:right;\"> 0.8061545 </td>\n   <td style=\"text-align:right;\"> 0.7869568 </td>\n   <td style=\"text-align:right;\"> 0.8240092 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_PARK </td>\n   <td style=\"text-align:right;\"> 1.195883 </td>\n   <td style=\"text-align:right;\"> 1.170847 </td>\n   <td style=\"text-align:right;\"> 1.224588 </td>\n   <td style=\"text-align:right;\"> 1.093564 </td>\n   <td style=\"text-align:right;\"> 0.8362021 </td>\n   <td style=\"text-align:right;\"> 0.8166011 </td>\n   <td style=\"text-align:right;\"> 0.8540825 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_MALL </td>\n   <td style=\"text-align:right;\"> 1.409846 </td>\n   <td style=\"text-align:right;\"> 1.376277 </td>\n   <td style=\"text-align:right;\"> 1.446409 </td>\n   <td style=\"text-align:right;\"> 1.187369 </td>\n   <td style=\"text-align:right;\"> 0.7092975 </td>\n   <td style=\"text-align:right;\"> 0.6913675 </td>\n   <td style=\"text-align:right;\"> 0.7265978 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_SUPERMARKET </td>\n   <td style=\"text-align:right;\"> 1.154751 </td>\n   <td style=\"text-align:right;\"> 1.131493 </td>\n   <td style=\"text-align:right;\"> 1.182124 </td>\n   <td style=\"text-align:right;\"> 1.074594 </td>\n   <td style=\"text-align:right;\"> 0.8659873 </td>\n   <td style=\"text-align:right;\"> 0.8459353 </td>\n   <td style=\"text-align:right;\"> 0.8837880 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WITHIN_350M_KINDERGARTEN </td>\n   <td style=\"text-align:right;\"> 1.125809 </td>\n   <td style=\"text-align:right;\"> 1.103886 </td>\n   <td style=\"text-align:right;\"> 1.152360 </td>\n   <td style=\"text-align:right;\"> 1.061042 </td>\n   <td style=\"text-align:right;\"> 0.8882499 </td>\n   <td style=\"text-align:right;\"> 0.8677846 </td>\n   <td style=\"text-align:right;\"> 0.9058910 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WITHIN_350M_CHILDCARE </td>\n   <td style=\"text-align:right;\"> 1.335594 </td>\n   <td style=\"text-align:right;\"> 1.304923 </td>\n   <td style=\"text-align:right;\"> 1.369351 </td>\n   <td style=\"text-align:right;\"> 1.155679 </td>\n   <td style=\"text-align:right;\"> 0.7487304 </td>\n   <td style=\"text-align:right;\"> 0.7302729 </td>\n   <td style=\"text-align:right;\"> 0.7663289 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WITHIN_350M_BUS </td>\n   <td style=\"text-align:right;\"> 1.148544 </td>\n   <td style=\"text-align:right;\"> 1.125564 </td>\n   <td style=\"text-align:right;\"> 1.175729 </td>\n   <td style=\"text-align:right;\"> 1.071701 </td>\n   <td style=\"text-align:right;\"> 0.8706679 </td>\n   <td style=\"text-align:right;\"> 0.8505364 </td>\n   <td style=\"text-align:right;\"> 0.8884435 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WITHIN_1KM_PRISCH </td>\n   <td style=\"text-align:right;\"> 1.550879 </td>\n   <td style=\"text-align:right;\"> 1.511876 </td>\n   <td style=\"text-align:right;\"> 1.592853 </td>\n   <td style=\"text-align:right;\"> 1.245343 </td>\n   <td style=\"text-align:right;\"> 0.6447958 </td>\n   <td style=\"text-align:right;\"> 0.6278044 </td>\n   <td style=\"text-align:right;\"> 0.6614298 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(vif)+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable `Component` is not in your data frame :/\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](in_class_ex08_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nSince all are below 5, there is no serious signs of multicollinearity.\n\n## Predictive Modeling with MLR\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbw_adaptive <- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=train_data,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(bw_adaptive, \"data/rds/bw_adaptive.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbw_adaptive <- read_rds(\"data/rds/bw_adaptive.rds\")   \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_adaptive <- gwr.basic(formula = resale_price ~\n                            floor_area_sqm + storey_order +\n                            remaining_lease_mths + PROX_CBD + \n                            PROX_ELDERLYCARE + PROX_HAWKER +\n                            PROX_MRT + PROX_PARK + PROX_MALL + \n                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                            WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                            WITHIN_1KM_PRISCH,\n                          data=train_data,\n                          bw=bw_adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE,\n                          longlat = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(gwr_adaptive, \"data/rds/gwr_adaptive.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_adaptive <- read_rds(\"data/rds/gwr_adaptive.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_bw_test_adaptive <- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=test_data,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n```\n:::\n\n\n## Predictive Modelling: Spatial ML\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- st_coordinates(mdata)\ncoords_train <- st_coordinates(train_data)\ncoords_test <- st_coordinates(test_data)\nwrite_rds(coords_train, \"data/rds/coords_train.rds\" )\nwrite_rds(coords_test, \"data/rds/coords_test.rds\" )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords_train <- read_rds(\"data/rds/coords_train.rds\")\ncoords_test <- read_rds(\"data/rds/coords_test.rds\")\n```\n:::\n\n\n## Dropping geometry field to make it a data.frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data_nogeom <- train_data %>%\n  st_drop_geometry()\n```\n:::\n\n\n## Calibrate RF model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nrf <- ranger(resale_price ~ floor_area_sqm + storey_order + \n               remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + \n               PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + \n               PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n               WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n               WITHIN_1KM_PRISCH,\n             data=train_data_nogeom)\nrf\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(rf, \"data/rds/rf.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrf <- read_rds(\"data/rds/rf.rds\")\nrf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data_nogeom) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      10335 \nNumber of independent variables:  14 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       731404460 \nR squared (OOB):                  0.9493789 \n```\n\n\n:::\n:::\n\n\n## Calibrate with `grf()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|eval: FALSE\nset.seed(1234)\ngwRF_adaptive <- grf(formula = resale_price ~ floor_area_sqm + storey_order +\n                       remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE +\n                       PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL +\n                       PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                       WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                       WITHIN_1KM_PRISCH,\n                     dframe=train_data_nogeom, \n                     bw=55,\n                     kernel=\"adaptive\",\n                     coords=coords_train)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nNumber of Observations: 10335\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNumber of Independent Variables: 14\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nKernel: Adaptive\nNeightbours: 55\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n--------------- Global ML Model Summary ---------------\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data_nogeom, num.trees = 500, mtry = 4, importance = \"impurity\",      num.threads = NULL) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      10335 \nNumber of independent variables:  14 \nMtry:                             4 \nTarget node size:                 5 \nVariable importance mode:         impurity \nSplitrule:                        variance \nOOB prediction error (MSE):       697593819 \nR squared (OOB):                  0.9517189 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nImportance:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          floor_area_sqm             storey_order     remaining_lease_mths \n            7.413197e+12             1.538950e+13             2.890637e+13 \n                PROX_CBD         PROX_ELDERLYCARE              PROX_HAWKER \n            5.310066e+13             7.285092e+12             5.568548e+12 \n                PROX_MRT                PROX_PARK                PROX_MALL \n            7.369745e+12             4.894344e+12             4.223286e+12 \n        PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN    WITHIN_350M_CHILDCARE \n            2.793853e+12             1.018586e+12             1.710374e+12 \n         WITHIN_350M_BUS        WITHIN_1KM_PRISCH \n            1.589501e+12             6.794634e+12 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nMean Square Error (Not OOB): 173951416.766\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nR-squared (Not OOB) %: 98.796\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAIC (Not OOB): 196129.252\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAICc (Not OOB): 196129.299\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n--------------- Local Model Summary ---------------\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nResiduals OOB:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-236112.0  -13033.7     444.4     593.8   14831.5  358041.7 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nResiduals Predicted (Not OOB):\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-79279.83  -3510.70     54.56     50.98   3909.85  83074.08 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nLocal Variable Importance:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                               Min          Max        Mean         StD\nfloor_area_sqm                   0 401562922035 18210850992 41426270899\nstorey_order             302736445 243728744368 16368419468 23620589843\nremaining_lease_mths     696564138 546463600727 34119912443 70328183398\nPROX_CBD                  55173040 382484896335 12154563393 29293290548\nPROX_ELDERLYCARE          45182031 344081962746 10597657883 24546405941\nPROX_HAWKER               43516026 342597797419 10551807020 23408387903\nPROX_MRT                  54234551 299075025906  9873129985 21055852211\nPROX_PARK                 49919822 322633843469  9353956995 19517077658\nPROX_MALL                 43296133 433263607933 11247374493 27537334970\nPROX_SUPERMARKET          52665827 417310417234 10802122271 26572460731\nWITHIN_350M_KINDERGARTEN         0 186468064682  2848177740 12928886968\nWITHIN_350M_CHILDCARE            0 255236737234  5526292324 18109971102\nWITHIN_350M_BUS                  0 193828795378  4747552546 11886064288\nWITHIN_1KM_PRISCH                0 178360608427  1778262602  7163381668\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nMean squared error (OOB): 930426169.333\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nR-squared (OOB) %: 93.56\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAIC (OOB): 213459.669\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAICc (OOB): 213459.716\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nMean squared error Predicted (Not OOB): 73859413.696\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nR-squared Predicted (Not OOB) %: 99.489\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAIC Predicted (Not OOB): 187276.161\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAICc Predicted (Not OOB): 187276.208\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nCalculation time (in seconds): 2.8837\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#|eval: FALSE\nwrite_rds(gwRF_adaptive, \"data/rds/gwRF_adaptive.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwRF_adaptive <- read_rds(\"data/rds/gwRF_adaptive.rds\")\n```\n:::\n\n\n## **Predicting by using test data**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_nogeom <- cbind(test_data, coords_test) %>%\n  st_drop_geometry()\n```\n:::\n\n\nNext, `predict.grf()` of spatialML package will be used to predict the resale value by using the test data and gwRF_adaptive model calibrated earlier.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|eval: FALSE\ngwRF_pred <- predict.grf(gwRF_adaptive, \n                           test_data_nogeom, \n                           x.var.name=\"X\",\n                           y.var.name=\"Y\", \n                           local.w=1,\n                           global.w=0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#|eval: FALSE\nGRF_pred <- write_rds(gwRF_pred, \"data/rds/GRF_pred.rds\")\n```\n:::\n\n\nConverting the predictive output into a data frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGRF_pred <- read_rds(\"data/rds/GRF_pred.rds\")\nGRF_pred_df <- as.data.frame(GRF_pred)\n```\n:::\n\n\nPlot out the differences: This should be able to plot and see which are the properties we tend to overestimate or underestimate. Plot the test data.\n\nTo do a comparison, we combine back with test data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_p <- cbind(test_data, GRF_pred_df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(test_data_p, \"data/rds/test_data_p.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_p <- read_rds(\"data/rds/test_data_p.rds\")\n```\n:::\n\n\n### **Calculating Root Mean Square Error**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrmse(test_data_p$resale_price, \n     test_data_p$GRF_pred)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 27302.9\n```\n\n\n:::\n:::\n\n\n### **Visualising the predicted values**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = test_data_p,\n       aes(x = GRF_pred,\n           y = resale_price)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](in_class_ex08_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "in_class_ex08_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}