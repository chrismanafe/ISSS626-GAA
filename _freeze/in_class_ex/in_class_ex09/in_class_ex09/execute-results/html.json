{
  "hash": "e10054e4a29eaf604314443319435836",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 9: Modelling Geographical Accessibility\"\nauthor: \"Christover Manafe\"\ndate: \"2024-10-28\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\nformat: \n  html:\n    code-fold: false\n    code-summary: \"code chunk\"\n    number-sections: true\n    number-depth: 4\n---\n\n\n# The Packages\n\nWe'll load following packages in R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tmap, SpatialAcc, sf, ggstatsplot, reshape2, tidyverse)\n```\n:::\n\n\n# The Data\n\nImporting geospatial data and aspatial data. We'll use the same data as those in `Hands-on Exercise 9`.\n\n::: panel-tabset\n## Geospatial\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_NO_SEA_PL\") %>%\n  st_transform(3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_NO_SEA_PL' from data source \n  `/Users/cham/project/Geospatial-Analytics/chrismanafe/ISSS626-GAA/in_class_ex/in_class_ex09/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n\n```{.r .cell-code}\nhexagons <- st_read(dsn = \"data/geospatial\", layer = \"hexagons\") %>%\n  st_transform(3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `hexagons' from data source \n  `/Users/cham/project/Geospatial-Analytics/chrismanafe/ISSS626-GAA/in_class_ex/in_class_ex09/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3125 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 21506.33 xmax: 50010.26 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\n```\n\n\n:::\n\n```{.r .cell-code}\neldercare <- st_read(dsn = \"data/geospatial\", layer = \"ELDERCARE\") %>%\n  st_transform(3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `ELDERCARE' from data source \n  `/Users/cham/project/Geospatial-Analytics/chrismanafe/ISSS626-GAA/in_class_ex/in_class_ex09/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 120 features and 19 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14481.92 ymin: 28218.43 xmax: 41665.14 ymax: 46804.9\nProjected CRS: SVY21 / Singapore TM\n```\n\n\n:::\n:::\n\n\n## Aspatial\n\n\n::: {.cell}\n\n```{.r .cell-code}\nODMatrix <- read_csv(\"data/aspatial/OD_Matrix.csv\", skip = 0)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 375000 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (6): origin_id, destination_id, entry_cost, network_cost, exit_cost, tot...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n:::\n\n# Data cleaning and updating attributes\n\n## Supply\n\nLet's use only `fid` and `ADDRESSPOS` from `eldercare` data frame, and we'll add new column `capacity` with value `100` for simplicity. In real life analysis, we would need to survey these eldercare facilities to find the actual capacity.\n\n\n::: {.cell}\n\n```{.r .cell-code}\neldercare <- eldercare%>%\n  select(fid, ADDRESSPOS) %>%\n  mutate(capacity = 100)\n```\n:::\n\n\n## Demand\n\nLet's use only `fid` from `hexagons` data frame, and we'll add new column `demand` with value `100` for simplicity.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhexagons <- hexagons %>%\n  select(fid) %>%\n  mutate(demand = 100)\n```\n:::\n\n\n## OD Matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistmat <- ODMatrix %>%\n  select(origin_id, destination_id, total_cost) %>%\n  spread(destination_id, total_cost) %>%\n  select(c(-c('origin_id')))\n```\n:::\n\n\nLet's create a large matrix from `distmat` and also convert the unit of measurement from meters to kilometers.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistmat_km <- as.matrix(distmat/1000)\n```\n:::\n\n\n# Computing Hansen's Accessibility\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacc_hansen <- data.frame(ac(hexagons$demand,\n                            eldercare$capacity,\n                            distmat_km,\n                            d0 = 50,\n                            power = 2,\n                            family = \"Hansen\"))\ncolnames(acc_hansen) <- \"accHansen\"\nacc_hansen <- as_tibble(acc_hansen)\nhexagon_hansen <- bind_cols(hexagons, acc_hansen)\n```\n:::\n\n\n# Visualising Accesibility\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmapex <- st_bbox(hexagons)\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(hexagon_hansen, bbox = mapex) +\n  tm_fill(col = \"accHansen\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"block\",\n          border.lwd = 1) +\n  tm_shape(eldercare) +\n  tm_symbols(size = 0.1) +\n  tm_layout(main.title = \"Accessibility to eldercare: Hansen method\",\n            main.title.position = \"center\",\n            main.title.size = 2,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](in_class_ex09_files/figure-html/unnamed-chunk-9-1.png){width=1152}\n:::\n:::\n\n\n# Statistical Graphic\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhexagon_hansen <- st_join(hexagon_hansen, mpsz, join = st_intersects)\nggbetweenstats(\n  data = hexagon_hansen,\n  x = REGION_N,\n  y = accHansen,\n  type = \"p\"\n)\n```\n\n::: {.cell-output-display}\n![](in_class_ex09_files/figure-html/unnamed-chunk-10-1.png){width=1152}\n:::\n:::\n",
    "supporting": [
      "in_class_ex09_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}