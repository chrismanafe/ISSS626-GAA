{
  "hash": "30f1ab2177e70839f31dea55e9f6d844",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 8: Geographically Weighted Predictive Models\"\nauthor: \"Christover Manafe\"\ndate: \"2024-10-16\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\nformat: \n  html:\n    code-fold: false\n    code-summary: \"code chunk\"\n    number-sections: true\n    number-depth: 4\n---\n\n\n# Overview\n\nPredictive modeling uses statistical learning or machine learning techniques to forecast outcomes. Typically, the event being predicted occurs in the future. However, a set of known outcomes and predictors (also referred to as variables) is used to calibrate the predictive models.\n\nThis exercise aims to build predictive models using geographical random forest. Along the way, the intended acquired skills are:\n\n-   Preparing training and test data sets using sampling methods\n-   Calibrating predictive models using both geospatial statistical learning and machine learning methods\n-   Comparing and selecting the best model for predicting the future outcome and,\n-   Predicting future outcomes using the best calibrated model\n\n# The Data\n\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------+\n| **Dataset Name**                      | **Description**                                                                                                          | **Format**                                                                                                                              |\n+=======================================+==========================================================================================================================+=========================================================================================================================================+\n| Master Plan 2014 Subzone Boundary     | Geospatial data representing the boundaries of different areas in Singapore, specifically at the planning subzone level. | ESRI Shapefile                                                                                                                          |\n|                                       |                                                                                                                          |                                                                                                                                         |\n|                                       |                                                                                                                          | [Source](https://data.gov.sg/datasets?query=Master+Plan+2014+Subzone+Boundary+(Web)&page=1&resultId=d_5cb80a95445f236737f6bc2bfe5f159d) |\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------+\n| HDB Resale data                       | Aspatial data containing HDB resale transacted prices in Singapore from Jan 2017 onwards.                                | CSV                                                                                                                                     |\n|                                       |                                                                                                                          |                                                                                                                                         |\n|                                       |                                                                                                                          | [Source](https://data.gov.sg/datasets?query=hdb+resale&page=1&resultId=d_8b84c4ee58e3cfc0ece0d773c8ca6abc)                              |\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------+\n| List of eldercare in Singapore        | Geospatial data containing list of eldercare locations in Singapore.                                                     | geojson                                                                                                                                 |\n|                                       |                                                                                                                          |                                                                                                                                         |\n|                                       |                                                                                                                          | [Source](https://data.gov.sg/datasets?query=eldercare&page=1&resultId=d_3545b068e3f3506c56b2cb6b6117b884)                               |\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------+\n| List of hawker centres in Singapore   | Geospatial data containing list of hawker centres locations in Singapore.                                                | geojson                                                                                                                                 |\n|                                       |                                                                                                                          |                                                                                                                                         |\n|                                       |                                                                                                                          | [Source](https://data.gov.sg/datasets?query=hawker+centre&page=1&resultId=d_4a086da0a5553be1d89383cd90d07ecd)                           |\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------+\n| List of parks in Singapore            | Geospatial data containing list of parks locations in Singapore.                                                         | geojson                                                                                                                                 |\n|                                       |                                                                                                                          |                                                                                                                                         |\n|                                       |                                                                                                                          | [Source](https://data.gov.sg/datasets?query=parks&page=1&resultId=d_0542d48f0991541706b58059381a6eca)                                   |\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------+\n| List of supermarkets in Singapore     | Geospatial data containing list of supermarkets locations in Singapore.                                                  | geojson                                                                                                                                 |\n|                                       |                                                                                                                          |                                                                                                                                         |\n|                                       |                                                                                                                          | [Source](https://data.gov.sg/datasets?query=supermarket&page=1&resultId=d_cac2c32f01960a3ad7202a99c27268a0)                             |\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------+\n| List of CHAS clinics in Singapore     | Geospatial data containing list of CHAS clinics locations in Singapore.                                                  | geojson                                                                                                                                 |\n|                                       |                                                                                                                          |                                                                                                                                         |\n|                                       |                                                                                                                          | [Source](https://data.gov.sg/datasets?query=chas+clinics&page=1&resultId=d_548c33ea2d99e29ec63a7cc9edcccedc)                            |\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------+\n| List of kindergartens in Singapore    | Geospatial data containing list of kindergartens locations in Singapore.                                                 | geojson                                                                                                                                 |\n|                                       |                                                                                                                          |                                                                                                                                         |\n|                                       |                                                                                                                          | [Source](https://data.gov.sg/datasets?query=childcare+services&page=1&resultId=d_5d668e3f544335f8028f546827b773b4)                      |\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------+\n| List of MRT/LRT stations in Singapore | Geospatial data containing list of MRT/LRT stations locations in Singapore.                                              | ESRI Shapefile                                                                                                                          |\n|                                       |                                                                                                                          |                                                                                                                                         |\n|                                       |                                                                                                                          | [Source](https://datamall.lta.gov.sg/content/datamall/en/static-data.html)                                                              |\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------+\n| List of bus stops in Singapore        | Geospatial data containing list of eldercare in Singapore.                                                               | ESRI Shapefile                                                                                                                          |\n|                                       |                                                                                                                          |                                                                                                                                         |\n|                                       |                                                                                                                          | [Source](https://datamall.lta.gov.sg/content/datamall/en/static-data.html)                                                              |\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------+\n| List of primary school in Singapore   | Aspatial data containing list of primary schools in Singapore.                                                           | CSV                                                                                                                                     |\n|                                       |                                                                                                                          |                                                                                                                                         |\n|                                       |                                                                                                                          | [Source](https://data.gov.sg/datasets?query=primary+school&page=1&resultId=d_688b934f82c1059ed0a6993d2a829089)                          |\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------+\n| CBD coordinates                       |                                                                                                                          | scraped from Google.                                                                                                                    |\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------+\n| List of shopping malls in Singapore   | Aspatial data containing list of shopping malls in Singapore.                                                            | CSV                                                                                                                                     |\n|                                       |                                                                                                                          |                                                                                                                                         |\n|                                       |                                                                                                                          | [Source](https://en.wikipedia.org/wiki/List_of_shopping_malls_in_Singapore)                                                             |\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------+\n| Good primary schools                  | Aspatial data containing list of primary schools that are ordered in ranking in terms of popularity.                     | CSV                                                                                                                                     |\n|                                       |                                                                                                                          |                                                                                                                                         |\n|                                       |                                                                                                                          | [Source](https://www.salary.sg/2021/best-primary-schools-2021-by-popularity)                                                            |\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------+\n\n: {tbl-colwidths=\"\\[25,50,25\\]\"}\n\n# The Packages\n\nWe will use following packages in this exercise\n\n::: panel-tabset\n## Packages\n\nWe will use following packages in this exercise:\n\n+---------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| **Package**                                                               | **Description**                                                                                                                                                                                                   |\n+===========================================================================+===================================================================================================================================================================================================================+\n| [**sf**](https://r-spatial.github.io/sf/)                                 | Provides functions to manage, process, and manipulate **Simple Features**, a formal geospatial data standard that specifies a storage and access model of spatial geometries such as points, lines, and polygons. |\n+---------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| [**spdep**](https://cran.r-project.org/web/packages/spdep/)               | Provides a collection of functions to create spatial weights matrix objects from polygon 'contiguities', point patterns by distance, and tessellations.                                                           |\n+---------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| [**tidyverse**](https://www.tidyverse.org/)                               | A collection of R packages for data science tasks such as importing, tidying, wrangling, and visualizing data.                                                                                                    |\n+---------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| [**tmap**](https://cran.r-project.org/web/packages/tmap/)                 | Provides functions for creating cartographic-quality static maps or interactive maps using the [leaflet](https://leafletjs.com/) API.                                                                             |\n+---------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| [**GWmodel**](https://cran.r-project.org/web/packages/GWmodel/index.html) | A package for calibrating the geographically weighted family of models.                                                                                                                                           |\n+---------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| [**SpatialML**](https://cran.r-project.org/web/packages/SpatialML/)       | A package that implements a spatial extension of the random forest algorithm.                                                                                                                                     |\n+---------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| [**rsample**](https://rsample.tidymodels.org/)                            | A package that provides functions to create different types of resamples and corresponding classes for their analysis.                                                                                            |\n+---------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| [**Metrics**](https://github.com/mfrasco/Metrics)                         | A packages for common machine learning metrics.                                                                                                                                                                   |\n+---------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n\n: {tbl-colwidths=\"\\[15,85\\]\"}\n\n## Code\n\nTo install and launch all R packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, GWmodel, SpatialML, tmap, rsample, Metrics, tidyverse)\n```\n:::\n\n:::\n\n# Data Preparation\n\n## Import the data\n\nWe already have processed data on above datasets in .rds format. Let's load it using `read_rds()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata <- read_rds(\"data/mdata.rds\")\nglimpse(mdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 15,901\nColumns: 18\n$ resale_price             <dbl> 330000, 360000, 370000, 375000, 380000, 38000…\n$ floor_area_sqm           <dbl> 92, 91, 92, 99, 92, 92, 92, 92, 93, 91, 91, 9…\n$ storey_order             <int> 1, 3, 1, 2, 2, 4, 3, 2, 4, 3, 3, 3, 4, 3, 2, …\n$ remaining_lease_mths     <dbl> 684, 738, 733, 700, 715, 732, 706, 745, 731, …\n$ PROX_CBD                 <dbl> 8.824749, 9.841309, 9.560780, 9.609731, 8.351…\n$ PROX_ELDERLYCARE         <dbl> 0.2514065, 0.6318448, 1.0824168, 0.3473195, 0…\n$ PROX_HAWKER              <dbl> 0.44182653, 0.26972560, 0.25829513, 0.4364751…\n$ PROX_MRT                 <dbl> 0.6885144, 1.0969096, 0.8862859, 1.4093169, 0…\n$ PROX_PARK                <dbl> 0.7450859, 0.4294870, 0.7800777, 0.1776163, 0…\n$ PROX_GOOD_PRISCH         <dbl> 1.2703931, 0.4045792, 2.0942375, 0.1375070, 1…\n$ PROX_MALL                <dbl> 0.5534331, 1.0677012, 0.9751113, 1.1752392, 1…\n$ PROX_CHAS                <dbl> 1.364596e-01, 2.569863e-01, 1.906189e-01, 2.9…\n$ PROX_SUPERMARKET         <dbl> 0.2708222, 0.3101889, 0.3187560, 0.4586748, 0…\n$ WITHIN_350M_KINDERGARTEN <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, …\n$ WITHIN_350M_CHILDCARE    <int> 6, 5, 2, 3, 3, 2, 3, 4, 3, 2, 4, 4, 4, 5, 2, …\n$ WITHIN_350M_BUS          <int> 8, 8, 8, 7, 6, 9, 6, 6, 5, 4, 10, 5, 6, 9, 8,…\n$ WITHIN_1KM_PRISCH        <int> 2, 2, 1, 2, 2, 1, 3, 2, 2, 2, 2, 2, 3, 2, 2, …\n$ geometry                 <POINT [m]> POINT (29179.92 38822.08), POINT (28423…\n```\n\n\n:::\n:::\n\n\n## Data Sampling\n\nThe entire dataset is split into training and test sets, with 65% allocated to the training set and 35% to the test set, using the `initial_split()` function from **rsample** package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nresale_split <- initial_split(mdata, \n                              prop = 6.5/10,)\ntrain_data <- training(resale_split)\ntest_data <- testing(resale_split)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(train_data, \"data/model/train_data.rds\")\nwrite_rds(test_data, \"data/model/test_data.rds\")\n```\n:::\n\n\n# Compute Correlation Matrix\n\nBefore loading the predictors into a predictive model, it is good practice to examine a correlation matrix to check for signs of multicollinearity.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata_nogeo <- mdata %>%\n  st_drop_geometry()\ncorrplot::corrplot(cor(mdata_nogeo[, 2:17]), \n                   diag = FALSE, \n                   order = \"AOE\",\n                   tl.pos = \"td\", \n                   tl.cex = 0.5, \n                   method = \"number\", \n                   type = \"upper\")\n```\n\n::: {.cell-output-display}\n![](hands_on_ex08_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n> The correlation matrix above shows that all correlation values are below 0.8, indicating no signs of multicollinearity.\n\n# Non-Spatial Multiple Linear Regression\n\nIn this section, we will build a non-spatial multiple linear regression model. This statistical technique uses several explanatory variables to predict the outcome of a response variable. The goal is to model the relationship between the explanatory and response variables.\n\nWe will use the `lm()` function to construct the model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_mlr <- lm(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                data=train_data)\nsummary(price_mlr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths + \n    PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + \n    PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n    data = train_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-205193  -39120   -1930   36545  472355 \n\nCoefficients:\n                           Estimate Std. Error t value Pr(>|t|)    \n(Intercept)              107601.073  10601.261  10.150  < 2e-16 ***\nfloor_area_sqm             2780.698     90.579  30.699  < 2e-16 ***\nstorey_order              14299.298    339.115  42.167  < 2e-16 ***\nremaining_lease_mths        344.490      4.592  75.027  < 2e-16 ***\nPROX_CBD                 -16930.196    201.254 -84.124  < 2e-16 ***\nPROX_ELDERLYCARE         -14441.025    994.867 -14.516  < 2e-16 ***\nPROX_HAWKER              -19265.648   1273.597 -15.127  < 2e-16 ***\nPROX_MRT                 -32564.272   1744.232 -18.670  < 2e-16 ***\nPROX_PARK                 -5712.625   1483.885  -3.850 0.000119 ***\nPROX_MALL                -14717.388   2007.818  -7.330 2.47e-13 ***\nPROX_SUPERMARKET         -26881.938   4189.624  -6.416 1.46e-10 ***\nWITHIN_350M_KINDERGARTEN   8520.472    632.812  13.464  < 2e-16 ***\nWITHIN_350M_CHILDCARE     -4510.650    354.015 -12.741  < 2e-16 ***\nWITHIN_350M_BUS             813.493    222.574   3.655 0.000259 ***\nWITHIN_1KM_PRISCH         -8010.834    491.512 -16.298  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 61650 on 10320 degrees of freedom\nMultiple R-squared:  0.7373,\tAdjusted R-squared:  0.737 \nF-statistic:  2069 on 14 and 10320 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n# GWR Predictive Method\n\nIn this section, we will learn how to calibrate a model to predict HDB resale prices using the geographically weighted regression (GWR) method from the [**GWmodel**](https://cran.r-project.org/web/packages/GWmodel/index.html) package.\n\n## Convert sf data frame to SpatialPointDataFrame\n\nFirst, we need to convert our `sf` data frame to a `SpatialPointsDataFrame`, as the functions in the `GWmodel` package require data in this format. We can perform this conversion using the `as_Spatial()` function from the `sf` package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data_sp <- as_Spatial(train_data)\ntrain_data_sp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatialPointsDataFrame \nfeatures    : 10335 \nextent      : 11597.31, 42623.63, 28217.39, 48741.06  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 17\nnames       : resale_price, floor_area_sqm, storey_order, remaining_lease_mths,          PROX_CBD,     PROX_ELDERLYCARE,        PROX_HAWKER,           PROX_MRT,          PROX_PARK,   PROX_GOOD_PRISCH,        PROX_MALL,            PROX_CHAS,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, ... \nmin values  :       218000,             74,            1,                  555, 0.999393538715878, 1.98943787433087e-08, 0.0333358643817954, 0.0220407324774434, 0.0441643212802781, 0.0652540365486641,                0, 6.20621206270077e-09, 1.21715176356525e-07,                        0,                     0, ... \nmax values  :      1186888,            133,           17,                 1164,  19.6500691667807,     3.30163731686804,   2.86763031236184,   2.13060636038504,   2.41313695915468,   10.6223726149914, 2.27100643784442,    0.808332738794272,     1.57131703651196,                        7,                    20, ... \n```\n\n\n:::\n:::\n\n\n## Compute adaptive bandwidth\n\nNext, the `bw.gwr()` function from the `GWmodel` package will be used to determine the optimal bandwidth for the GWR model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbw_adaptive <- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=train_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\nwrite_rds(bw_adaptive, \"data/aspatial/bw_adaptive.rds\")\n```\n:::\n\n\n> In the adaptive approach, the bandwidth is not a fixed distance but is determined by the number of nearest neighbor points. This approach is particularly useful in areas where the density of data points varies.\n>\n> The result from the `bw.gwr()` function indicates that the optimal bandwidth for this dataset is 40 neighbor points. This means that when estimating the parameters for a given location, the model will consider the 40 nearest neighbors.\n\n## Construct adaptive bandwidth GWR model\n\nNext, let us call the saved bandwidth by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbw_adaptive <- read_rds(\"data/aspatial/bw_adaptive.rds\")\nbw_adaptive\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 40\n```\n\n\n:::\n:::\n\n\nNow, we can proceed to calibrate the GWR-based hedonic pricing model using an adaptive bandwidth and a Gaussian kernel, as shown in the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_adaptive <- gwr.basic(formula = resale_price ~\n                            floor_area_sqm + storey_order +\n                            remaining_lease_mths + PROX_CBD + \n                            PROX_ELDERLYCARE + PROX_HAWKER +\n                            PROX_MRT + PROX_PARK + PROX_MALL + \n                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                            WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                            WITHIN_1KM_PRISCH,\n                          data=train_data_sp,\n                          bw=bw_adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE,\n                          longlat = FALSE)\nwrite_rds(gwr_adaptive, \"data/aspatial/gwr_adaptive.rds\")\n```\n:::\n\n\n## Retrieve GWR output object\n\nThe code chunk below will be used to retrieve the saved GWR model object.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_adaptive <- read_rds(\"data/aspatial/gwr_adaptive.rds\")\ngwr_adaptive\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-10-16 23:08:34.710299 \n   Call:\n   gwr.basic(formula = resale_price ~ floor_area_sqm + storey_order + \n    remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + \n    PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n    data = train_data_sp, bw = bw_adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  resale_price\n   Independent variables:  floor_area_sqm storey_order remaining_lease_mths PROX_CBD PROX_ELDERLYCARE PROX_HAWKER PROX_MRT PROX_PARK PROX_MALL PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN WITHIN_350M_CHILDCARE WITHIN_350M_BUS WITHIN_1KM_PRISCH\n   Number of data points: 10335\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n    Min      1Q  Median      3Q     Max \n-205193  -39120   -1930   36545  472355 \n\n   Coefficients:\n                              Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)              107601.073  10601.261  10.150  < 2e-16 ***\n   floor_area_sqm             2780.698     90.579  30.699  < 2e-16 ***\n   storey_order              14299.298    339.115  42.167  < 2e-16 ***\n   remaining_lease_mths        344.490      4.592  75.027  < 2e-16 ***\n   PROX_CBD                 -16930.196    201.254 -84.124  < 2e-16 ***\n   PROX_ELDERLYCARE         -14441.025    994.867 -14.516  < 2e-16 ***\n   PROX_HAWKER              -19265.648   1273.597 -15.127  < 2e-16 ***\n   PROX_MRT                 -32564.272   1744.232 -18.670  < 2e-16 ***\n   PROX_PARK                 -5712.625   1483.885  -3.850 0.000119 ***\n   PROX_MALL                -14717.388   2007.818  -7.330 2.47e-13 ***\n   PROX_SUPERMARKET         -26881.938   4189.624  -6.416 1.46e-10 ***\n   WITHIN_350M_KINDERGARTEN   8520.472    632.812  13.464  < 2e-16 ***\n   WITHIN_350M_CHILDCARE     -4510.650    354.015 -12.741  < 2e-16 ***\n   WITHIN_350M_BUS             813.493    222.574   3.655 0.000259 ***\n   WITHIN_1KM_PRISCH         -8010.834    491.512 -16.298  < 2e-16 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 61650 on 10320 degrees of freedom\n   Multiple R-squared: 0.7373\n   Adjusted R-squared: 0.737 \n   F-statistic:  2069 on 14 and 10320 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 3.922202e+13\n   Sigma(hat): 61610.08\n   AIC:  257320.2\n   AICc:  257320.3\n   BIC:  247249\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 40 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                                   Min.     1st Qu.      Median     3rd Qu.\n   Intercept                -3.2594e+08 -4.7727e+05 -8.3004e+03  5.5025e+05\n   floor_area_sqm           -2.8714e+04  1.4475e+03  2.3011e+03  3.3900e+03\n   storey_order              3.3186e+03  8.5899e+03  1.0826e+04  1.3397e+04\n   remaining_lease_mths     -1.4431e+03  2.6063e+02  3.9048e+02  5.2865e+02\n   PROX_CBD                 -1.0837e+07 -5.7697e+04 -1.3787e+04  2.6552e+04\n   PROX_ELDERLYCARE         -3.2291e+07 -4.0643e+04  1.0562e+04  6.1054e+04\n   PROX_HAWKER              -2.3985e+08 -5.1365e+04  3.0026e+03  6.4287e+04\n   PROX_MRT                 -1.1660e+07 -1.0488e+05 -4.9373e+04  5.1037e+03\n   PROX_PARK                -6.5961e+06 -4.8671e+04 -8.8128e+02  5.3498e+04\n   PROX_MALL                -1.8112e+07 -7.4238e+04 -1.3982e+04  4.9779e+04\n   PROX_SUPERMARKET         -4.5761e+06 -6.3461e+04 -1.7429e+04  3.5616e+04\n   WITHIN_350M_KINDERGARTEN -4.1881e+05 -6.0040e+03  9.0209e+01  4.7127e+03\n   WITHIN_350M_CHILDCARE    -1.0273e+05 -2.2375e+03  2.6668e+02  2.6388e+03\n   WITHIN_350M_BUS          -1.1757e+05 -1.4719e+03  1.1626e+02  1.7584e+03\n   WITHIN_1KM_PRISCH        -6.6465e+05 -5.5959e+03  2.6916e+02  5.7500e+03\n                                  Max.\n   Intercept                1.6493e+08\n   floor_area_sqm           5.0907e+04\n   storey_order             2.9537e+04\n   remaining_lease_mths     1.8119e+03\n   PROX_CBD                 2.2489e+07\n   PROX_ELDERLYCARE         8.2444e+07\n   PROX_HAWKER              5.9654e+06\n   PROX_MRT                 2.0189e+08\n   PROX_PARK                1.5224e+07\n   PROX_MALL                1.0443e+07\n   PROX_SUPERMARKET         3.8330e+06\n   WITHIN_350M_KINDERGARTEN 6.6799e+05\n   WITHIN_350M_CHILDCARE    1.0802e+05\n   WITHIN_350M_BUS          3.7313e+04\n   WITHIN_1KM_PRISCH        5.0262e+05\n   ************************Diagnostic information*************************\n   Number of data points: 10335 \n   Effective number of parameters (2trace(S) - trace(S'S)): 1730.101 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 8604.899 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 238871.8 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 237036.9 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 238209 \n   Residual sum of squares: 4.829177e+12 \n   R-square value:  0.9676571 \n   Adjusted R-square value:  0.9611535 \n\n   ***********************************************************************\n   Program stops at: 2024-10-16 23:09:34.919185 \n```\n\n\n:::\n:::\n\n\n## **Convert test data from sf data frame to SpatialPointDataFrame**\n\nWe need to convert our test data from an `sf` data frame to a `SpatialPointsDataFrame`, as the functions in the `GWmodel` package require data in this format. We will use the `as_Spatial()` function from the **sf** package to perform this conversion.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_sp <- test_data %>%\n  as_Spatial()\n\ntest_data_sp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatialPointsDataFrame \nfeatures    : 5566 \nextent      : 11597.31, 42623.63, 28287.8, 48669.59  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 17\nnames       : resale_price, floor_area_sqm, storey_order, remaining_lease_mths,         PROX_CBD,     PROX_ELDERLYCARE,        PROX_HAWKER,           PROX_MRT,          PROX_PARK,   PROX_GOOD_PRISCH,        PROX_MALL,            PROX_CHAS,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, ... \nmin values  :       230888,             74,            1,                  546, 1.00583660772922, 3.34897933104965e-07, 0.0474019664161957, 0.0414043955932523, 0.0502664084494264, 0.0907500295577619,                0, 4.55547870890763e-09, 1.21715176356525e-07,                        0,                     0, ... \nmax values  :      1050000,            138,           14,                 1151,  19.632402730488,     3.30163731686804,   2.83106651960209,   2.13060636038504,   2.41313695915468,   10.6169590126272, 2.26056404492346,     0.79249074802552,     1.53786629004208,                        7,                    16, ... \n```\n\n\n:::\n:::\n\n\n## **Compute adaptive bandwidth for test data**\n\nNext, similar to the process used for the training data, we will use the `bw.gwr()` function from the **GWmodel** package to determine the optimal bandwidth for the GWR model on the test data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_bw_test_adaptive <- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=test_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\nwrite_rds(gwr_bw_test_adaptive, \"data/aspatial/gwr_bw_test_adaptive.rds\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n## Compute predicted values of test data\n\nFinally, we use the `gwr.predict()` function from the **`GWmodel`** package to compute the predicted values for the test data based on our GWR model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_pred <- gwr.predict(formula = resale_price ~\n                          floor_area_sqm + storey_order +\n                          remaining_lease_mths + PROX_CBD + \n                          PROX_ELDERLYCARE + PROX_HAWKER + \n                          PROX_MRT + PROX_PARK + PROX_MALL + \n                          PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                          WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n                          WITHIN_1KM_PRISCH, \n                        data=train_data_sp, \n                        predictdata = test_data_sp, \n                        bw=40, \n                        kernel = 'gaussian', \n                        adaptive=TRUE, \n                        longlat = FALSE)\n```\n:::\n\n\n# Preparing coordinates data\n\n## Extracting coordinates data\n\nThe code chunk below extract the x, y coordinates of the full, training and test data sets using `st_coordinates()` function from the **sf** package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- st_coordinates(mdata)\ncoords_train <- st_coordinates(train_data)\ncoords_test <- st_coordinates(test_data)\n```\n:::\n\n\nSave the output into rds for future use.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords_train <- write_rds(coords_train, \"data/geospatial/coords_train.rds\" )\ncoords_test <- write_rds(coords_test, \"data/geospatial/coords_test.rds\" )\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n## Dropping geometry field\n\nNext, we drop the geometry column from the `sf` data frame, as it is not needed for our upcoming analysis. We will use the `st_drop_geometry()` function from the `sf` package to perform this operation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data <- train_data %>% \n  st_drop_geometry()\n```\n:::\n\n\n# Calibrating Random Forest Model\n\nIn this section, we will learn how to calibrate a model to predict HDB resale prices using the random forest function from the [**ranger**](https://cran.r-project.org/web/packages/ranger/index.html) package. After fitting the model, we save it as an RDS file using the `write_rds()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nrf <- ranger(resale_price ~ floor_area_sqm + storey_order + \n               remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + \n               PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + \n               PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n               WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n               WITHIN_1KM_PRISCH,\n             data=train_data)\nwrite_rds(rf, \"data/model/rf.rds\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      10335 \nNumber of independent variables:  14 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       731404460 \nR squared (OOB):                  0.9493789 \n```\n\n\n:::\n:::\n\n\n# Calibrating Geographical Random Forest Model\n\nIn this section, we will learn how to calibrate a model to predict HDB resale price using the `grf()` function of [**SpatialML**](https://cran.r-project.org/web/packages/ranger/index.html) package.\n\n## Calibrating using training data\n\nLet's calibrate a geographic random forest model then save the model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\ngwRF_adaptive <- grf(formula = resale_price ~ floor_area_sqm + storey_order +\n                       remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE +\n                       PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL +\n                       PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                       WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                       WITHIN_1KM_PRISCH,\n                     dframe=train_data, \n                     bw=55,\n                     kernel=\"adaptive\",\n                     coords=coords_train)\nwrite_rds(gwRF_adaptive, \"data/model/gwRF_adaptive.rds\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n## Predicting using test data\n\n### Preparing test data\n\nFirst, combine the test data with the corresponding coordinates. Since none of the rows in our datasets were sorted, using `cbind()` is sufficient. The `st_drop_geometry()` function is used to remove the geometry column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data <- cbind(test_data, coords_test) %>%\n  st_drop_geometry()\n```\n:::\n\n\n### Predicting with test data\n\nNext, the `predict.grf()` function from the **SpatialML** package will be used to predict the resale value using the test data and the previously calibrated `gwRF_adaptive` model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGRF_pred <- predict.grf(gwRF_adaptive, \n                           test_data, \n                           x.var.name=\"X\",\n                           y.var.name=\"Y\", \n                           local.w=1,\n                           global.w=0)\nwrite_rds(GRF_pred, \"data/model/GRF_pred.rds\")\n```\n:::\n\n\n### Converting prediction output into a data frame\n\nThe output of `predict.grf()` is a vector of predicted values. It is advisable to convert this into a data frame for easier visualization and analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGRF_pred <- read_rds(\"data/model/GRF_pred.rds\")\nGRF_pred_df <- as.data.frame(GRF_pred)\n```\n:::\n\n\nThen, we'll use `cbind()` to append the predicted values to the test data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_p <- cbind(test_data, GRF_pred_df)\nwrite_rds(test_data_p, \"data/model/test_data_p.rds\")\n```\n:::\n\n\n## Calculate Root Mean Square Error (RMSE)\n\nThe root mean square error (RMSE) allows us to measure how far the predicted values are from the observed values in a regression analysis. In the code chunk below, the `rmse()` function from the `Metrics` package is used to compute the RMSE.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrmse(test_data_p$resale_price,\n     test_data_p$GRF_pred)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 27302.9\n```\n\n\n:::\n:::\n\n\n## Visualize Predicted Value\n\nA scatterplot can be used to visualize the actual resale prices versus the predicted resale prices, as shown in the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = test_data_p,\n       aes(x = GRF_pred,\n           y = resale_price)) +\n  geom_point() +\n  geom_abline(slope = 1, intercept = 0, color = \"red\", linetype = \"solid\")\n```\n\n::: {.cell-output-display}\n![](hands_on_ex08_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n# Reference\n\nKam, T. S. Geographically Weighted Predictive Models. *R for Geospatial Data Science and Analytics.* <https://r4gdsa.netlify.app/chap14.html>\n",
    "supporting": [
      "hands_on_ex08_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}